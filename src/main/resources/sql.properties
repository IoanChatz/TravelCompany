create.database=CREATE DATABASE IF NOT EXISTS `travelcompany`;

create.table.customer=\
CREATE TABLE IF NOT EXISTS `travelcompany`.`customer` ( \
`customerid` int NOT NULL AUTO_INCREMENT,\
`name` varchar(60) NOT NULL, \
`email` varchar(60) NOT NULL, \
`addresscity` varchar(60) NOT NULL, \
`nationality` varchar(60) NOT NULL, \
`category` varchar(60) NOT NULL, \
PRIMARY KEY (`customerid`));

create.table.itinerary=\
  CREATE TABLE IF NOT EXISTS `travelcompany`.`itinerary` ( \
`itineraryid` INT NOT NULL AUTO_INCREMENT,\
`departureairportid` VARCHAR(45) NOT NULL,\
`destinationairportid` VARCHAR(45) NOT NULL,\
`departuredate` DATE NOT NULL,\
`airline` VARCHAR(45) NOT NULL,\
`cost` int NOT NULL,\
PRIMARY KEY (`itineraryid`));

create.table.ticket=\
  CREATE TABLE IF NOT EXISTS `travelcompany`.`ticket` ( \
`ticketid` int NOT NULL AUTO_INCREMENT, \
`customerid` int NOT NULL, \
`itineraryid` int NOT NULL, \
`paymentmethod` varchar(60) NOT NULL, \
`amount` int NOT NULL, \
PRIMARY KEY (`ticketid`), \
KEY `customerid_idx` (`customerid`),\
KEY `itineraryid_idx` (`itineraryid`), \
CONSTRAINT `customerid` FOREIGN KEY (`customerid`) REFERENCES `customer` (`customerid`),\
CONSTRAINT `itineraryid` FOREIGN KEY (`itineraryid`) REFERENCES `itinerary` (`itineraryid`));

insert.table.customer=\
  INSERT INTO `travelcompany`.`customer`\
(`customerid`,`name`,`email`,`addresscity`,`nationality`,`category`) \
VALUES(?,?, ?, ?, ?, ?);

insert.table.itinerary=\
INSERT INTO `travelcompany`.`itinerary`\
(`itineraryid`,`departureairportid`,`destinationairportid`,`departuredate`,`airline`,`cost`)\
VALUES(?,?, ?, ?, ?, ?);

insert.table.ticket=\
INSERT INTO `travelcompany`.`ticket`(`ticketid`,`customerid`,`itineraryid`,`paymentmethod`,`amount`)\
VALUES(?,?,?,?,?);

select.table.customer=SELECT * FROM `travelcompany`.`customer`;
select.table.itinerary=SELECT * FROM `travelcompany`.`itinerary`;
select.table.ticket=SELECT * FROM `travelcompany`.`ticket`;
select.table.category=SELECT * FROM `travelcompany`.`category`;

select.cost.amount.ticket=\
SELECT  `customer`.`name` as Full_Name, count(`ticketid`) as Total_Purchases, sum(`amount`) Total_Cost FROM `ticket`\
INNER JOIN `customer` USING(`customerid`) \
GROUP BY `customer`.`name`;

select.customer.max.tickets=\
SELECT `customer`.`name` AS Full_Name, COUNT(`ticketid`) AS Max_Purchases FROM `ticket`\
INNER JOIN `customer` USING(`customerid`)\
GROUP BY `customer`.`name`\
ORDER BY Max_Purchases DESC LIMIT 1;

select.zero.tickets=\
SELECT `customer`.`name` AS Full_Name FROM `customer`\
LEFT JOIN `ticket` USING(`customerid`)\
WHERE `ticket`.`customerid` IS NULL;

select.itineraries.offered=\
  SELECT `departureairportid` AS Departure_Airport,`destinationairportid` AS Destination_Airport, \
  count(`destinationairportid`) Total_Itineraries  FROM `itinerary`\
GROUP BY `destinationairportid`;